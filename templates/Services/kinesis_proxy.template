{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation template to deploy Solace to Kinesis AWS API Gateway",
  "Parameters": {
    "vpcId": {"Type": "String"},
    "RoleARN" : {"Type": "String"}
  },
  "Mappings": {},
  "Conditions": {},
  "Resources": {  
      "ApiProxyGateway": {
        "Type" : "AWS::ApiGateway::RestApi",
        "Properties" : {  
          "Name" : {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "gateway"]]},
          "Description" : "Proxy for created resource",   
          "FailOnWarnings" : true,
          "Body" : {
          "swagger": "2.0",
          "info": {
            "version": "2016-03-31T18:25:32Z",
            "title": "Solace_binary_message->Kinesis"
          },
          "schemes": [
            "https"
          ],
          "paths": {
            "post": {
              "consumes": [
                "application/octet-stream",
                "text/plain",
                "text/xml",
                "application/json"
              ],
              "produces": [
                "application/json"
              ],
              "parameters": [
                {
                  "in": "body",
                  "name": "Empty",
                  "required": true,
                  "schema": {
                    "$ref": "#/definitions/Empty"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200 response",
                  "schema": {
                    "$ref": "#/definitions/Empty"
                  }
                },
                "400": {
                  "description": "400 response"
                },
                "500": {
                  "description": "500 response"
                }
              },
              "x-amazon-apigateway-integration": {
                "credentials": {"Ref" : "RoleARN"},
                "uri": {"Fn::Join": [":", ["arn:aws:apigateway", {"Ref": "AWS::Region"}, "kinesis:action/PutRecord"]]},
                "responses": {
                  "4\\d{2}": {
                    "statusCode": "400"
                  },
                  "5\\d{2}": {
                    "statusCode": "500"
                  },
                  "2\\d{2}": {
                    "statusCode": "200"
                  }
                },
                "requestParameters": {
                  "integration.request.header.Content-Type": "'application/x-amz-json-1.1'"
                },
                "requestTemplates": {
                  "application/octet-stream": {"Fn::Join": ["",["{\n    \"StreamName\": \"", {"Ref": "ResourceARN"}, "\",\n    \"Data\": \"$util.base64Encode($input.body)\",\n    \"PartitionKey\": \"$input.path('", {"Ref" : "PartitionKey"},"')\"\n}"]]},
                  "application/json": {"Fn::Join": ["",["{\n    \"StreamName\": \"", {"Ref": "ResourceARN"}, "\",\n    \"Data\": \"$util.base64Encode($input.body)\",\n    \"PartitionKey\": \"$input.path('", {"Ref" : "PartitionKey"},"')\"\n}"]]},
                  "text/xml": {"Fn::Join": ["",["{\n    \"StreamName\": \"", {"Ref": "ResourceARN"}, "\",\n    \"Data\": \"$util.base64Encode($input.body)\",\n    \"PartitionKey\": \"$input.path('", {"Ref" : "PartitionKey"},"')\"\n}"]]},
                  "text/plain": {"Fn::Join": ["",["{\n    \"StreamName\": \"", {"Ref": "ResourceARN"}, "\",\n    \"Data\": \"$util.base64Encode($input.body)\",\n    \"PartitionKey\": \"$input.path('", {"Ref" : "PartitionKey"},"')\"\n}"]]}
                },
                "passthroughBehavior": "when_no_match",
                "httpMethod": "POST",
                "type": "aws"
              }
            }
          },
          "definitions": {
            "Empty": {
              "type": "object"
            }
          },
          "x-amazon-apigateway-policy": {
						"Version": "2012-10-17",
						"Statement": [
							{
								"Effect": "Allow",
								"Principal": "*",
								"Action": "execute-api:Invoke",
								"Resource": {
									"Fn::Join": [":",
										[
											"arn:aws:execute-api",
											{"Ref": "AWS::Region"},
											{"Fn::Select": ["4",{"Fn::Split": [":",{"Ref": "RoleARN"}]}]},
											"*/*"
										]
									]
								},
								"Condition": {
									"StringEquals": {
										"aws:sourceVpc": {"Ref": "vpcId"}
									}
								}
							}
						]
					}
      }
    }
  },
    "ApiProxyGatewayDeployment": {
    "Type" : "AWS::ApiGateway::Deployment",
    "DependsOn": [ "ApiProxyGateway" ],
    "Properties" : {
        "Description" : "Deploy the service proxy",
        "RestApiId" : {"Ref" : "ApiProxyGateway"},
        "StageDescription" : {
          "CacheClusterEnabled" : false
        },
        "StageName" : "DEVELOPMENT"
      }
    }
  },
  "Outputs": {
      "APIGatewayId": {
          "Value": {"Ref": "ApiProxyGateway"},
          "Description": "API Gateway ID",
          "Export": {
              "Name": {
                  "Fn::Sub": "${AWS::StackName}-APIGatewayId"
              }
          }
      }
  }
}
